plugins {
  id 'all.shared.gradle.project-style-checker' version '1.0.7'
  id 'all.shared.gradle.code-common-tasks' version '1.0.1'
  id 'com.moowork.node' version '1.2.0'
}

repositories {
  jcenter()
}

// Plugins settings
///////////////////

node {
  version = NODE_VERSION
  download = true
}

// TASKS
////////

final MAIN_FOLDER = "$projectDir/src/main/js"
final TEST_FOLDER = "$projectDir/src/test"

final ASSESS_COMMON_CONFIG = {
  group = codeCommonTasks.groupForAssessTasks
  inputs.file '.eslintrc.json'
  inputs.file 'package.json'
  inputs.property('configFile', baseStyleConfig.js.eslintNpmConfigArg)
  outputs.upToDateWhen { true }
}

task assessStyleConfig(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'assessStyleConfig',
    baseStyleConfig.js.eslintNpmConfigArg,
    '--silent'
  ]
  // gradle task settings
  inputs.files fileLister.obtainPartialFileTree('config', [includes: ['**/*.js']])
}
assessStyleConfig ASSESS_COMMON_CONFIG

task assessStyleMain(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'assessStyleMain',
    baseStyleConfig.js.eslintNpmConfigArg,
    '--silent'
  ]
  // gradle task settings
  inputs.dir MAIN_FOLDER
}
assessStyleMain ASSESS_COMMON_CONFIG

task assessFlowStyleMain(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'assessFlowStyleMain',
    '--silent'
  ]
  // gradle task settings
  group = codeCommonTasks.groupForAssessTasks
  inputs.file "$MAIN_FOLDER/NamedReducer.js.flow"
  inputs.file 'src/test/typings/flow/.eslintrc.json'
  inputs.file 'package.json'
  outputs.upToDateWhen { true }
}

task assessTsStyleMain(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'assessTsStyleMain',
    '--silent'
  ]
  // gradle task settings
  group = codeCommonTasks.groupForAssessTasks
  inputs.file "$MAIN_FOLDER/NamedReducer.d.ts"
  inputs.file 'src/test/typings/ts/.eslintrc.json'
  inputs.file 'package.json'
  outputs.upToDateWhen { true }
}

final ASSESS_TYPINGS_COMMON_CONFIG = {
  group = codeCommonTasks.groupForAssessTasks
  inputs.files 'package.json'
  inputs.dir MAIN_FOLDER
  shouldRunAfter 'assessStyleMain'
}

task assessTypingsFlow(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'assessTypingsFlow',
    '--silent'
  ]
  // gradle task settings
  inputs.files 'config/main/.flowconfig'
}
assessTypingsFlow ASSESS_TYPINGS_COMMON_CONFIG

task assessTypingsTs(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'assessTypingsTs',
    '--silent'
  ]
  // gradle task settings
  inputs.files 'config/main/tsconfig.json'
}
assessTypingsTs ASSESS_TYPINGS_COMMON_CONFIG

task assessMain {
  dependsOn 'assessStyleMain', 'assessFlowStyleMain', 'assessTsStyleMain', 'assessTypingsFlow', 'assessTypingsTs'
}

task assessTest(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'assessStyleTest',
    baseStyleConfig.js.eslintNpmConfigArg,
    '--silent'
  ]
  // gradle task settings
  inputs.dir TEST_FOLDER
}
assessTest ASSESS_COMMON_CONFIG

task testTypingsFlow(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'testTypingsFlow',
    '--silent'
  ]
  // gradle task settings
  group = codeCommonTasks.groupForTestTasks
  inputs.files 'package.json'
  inputs.files 'config/test/.flowconfig'
  inputs.files "$projectDir/src/test/typings/flow/typingTest.jsx"
  inputs.dir MAIN_FOLDER
  shouldRunAfter 'assessTypingsFlow'
}

task testTypingsTs(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'testTypingsTs',
    '--silent'
  ]
  // gradle task settings
  group = codeCommonTasks.groupForTestTasks
  inputs.files 'package.json'
  inputs.files 'config/test/tsconfig.json'
  inputs.dir MAIN_FOLDER
  inputs.files "$projectDir/src/test/typings/ts/typingTest.tsx"
  shouldRunAfter 'assessTypingsTs'
}

task unitTest(type: NpmTask) {
  // NpmTask task settings
  args = [
    'run',
    'test',
    '--silent'
  ]
  // gradle task settings
  inputs.dir MAIN_FOLDER
  inputs.dir "$TEST_FOLDER/js"
  shouldRunAfter 'testTypingsFlow', 'testTypingsTs'
}

task test {
  dependsOn 'unitTest', 'testTypingsFlow', 'testTypingsTs'
}

task check {
  dependsOn 'test'
}

task build(type: NpmTask) {
  workingDir buildDir
  args = [
    'pack',
    '../'
  ]
}

task publish(type: NpmTask) {
  args = ['publish']
}

defaultTasks 'assessCommon', 'assessGradle', 'npmInstall', 'assessStyleConfig', 'build'
